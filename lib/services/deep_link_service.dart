import 'package:flutter/material.dart';
import 'package:app_links/app_links.dart';
import 'dart:async';
import 'onboarding_service.dart';
import 'config_service.dart';

/// –°–µ—Ä–≤–∏—Å –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ Deep Links
/// –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤–æ–∑–≤—Ä–∞—Ç–∞ –∏–∑ Telegram –±–æ—Ç–∞
class DeepLinkService {
  static final DeepLinkService _instance = DeepLinkService._internal();
  factory DeepLinkService() => _instance;
  DeepLinkService._internal();

  StreamSubscription? _subscription;
  OnboardingService? _onboardingService;
  late final AppLinks _appLinks;
  bool _initialized = false;

  /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞
  void initialize(OnboardingService onboardingService) {
    if (!ConfigService.enableDeepLinks) {
      print('‚ö†Ô∏è  Deep Links disabled in config');
      return;
    }

    if (_initialized) {
      print('‚ö†Ô∏è  DeepLinkService already initialized');
      return;
    }

    _onboardingService = onboardingService;
    _appLinks = AppLinks();
    _initialized = true;
    _initDeepLinkListener();
    print('‚úÖ DeepLinkService initialized');
  }

  /// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ª—É—à–∞—Ç–µ–ª—è deep links
  void _initDeepLinkListener() async {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ deep links –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    try {
      final Uri? initialLink = await _appLinks.getInitialAppLink();
      if (initialLink != null) {
        _handleDeepLink(initialLink.toString());
      }
    } catch (e) {
      print('‚ùå Error getting initial app link: $e');
    }

    // –û–±—Ä–∞–±–æ—Ç–∫–∞ deep links –≤–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    _subscription = _appLinks.uriLinkStream.listen((Uri? uri) {
      if (uri != null) {
        _handleDeepLink(uri.toString());
      }
    }, onError: (err) {
      print('‚ùå Deep link error: $err');
    });
  }

  /// –û–±—Ä–∞–±–æ—Ç–∫–∞ deep link
  void _handleDeepLink(String link) {
    print('üìé Received deep link: $link');
    
    if (link.startsWith('vpnclient://')) {
      // –û–±—Ä–∞–±–æ—Ç–∫–∞ deep link –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è onboarding
      if (_onboardingService != null) {
        _onboardingService!.handleDeepLink(link);
      }
    }
    
    // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –¥—Ä—É–≥–∏—Ö deep links –∑–¥–µ—Å—å
    // –ù–∞–ø—Ä–∏–º–µ—Ä: vpnclient://add-server?url=...
    // –∏–ª–∏: vpnclient://connect?server_id=...
  }

  /// –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤
  void dispose() {
    _subscription?.cancel();
    _subscription = null;
    _onboardingService = null;
    _initialized = false;
    print('DeepLinkService disposed');
  }
}

